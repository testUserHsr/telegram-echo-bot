version: '3,8'
services:
  db:
    image: postgres:15-alpine
    container_name: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d echo_bot_db" ]
      interval: 3s
      timeout: 3s
      retries: 5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: echo_bot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
  redis:
    container_name: redis
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "6379:6379"
  telegram-bot:
    image: telegram-echo-bot:latest
    env_file: .env
    environment:
      - "SERVER_URL=jdbc:postgresql://db:5432/echo_bot_db"
      - "SERVER_USERNAME=user"
      - "SERVER_PASS=pass"
      - "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}"
      - "TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "CACHE_PREFIX=${CACHE_PREFIX:-berkut}"
      - "CACHE_TTL=${CACHE_TTL:-30m}"
      - "FLYWAY_ENABLED=true"
    ports:
      - "8088:8088"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  postgres_data: